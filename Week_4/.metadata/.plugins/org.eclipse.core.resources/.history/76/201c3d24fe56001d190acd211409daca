package kodlama.io.Devs.business.concretes;

import java.util.List;

import kodlama.io.Devs.business.abstracts.ProgrammingLanguageService;
import kodlama.io.Devs.dataAccess.abstracts.ProgrammingLanguageRepository;
import kodlama.io.Devs.entities.concretes.ProgrammingLanguages;

public class ProgrammingLanguageManager implements ProgrammingLanguageService{

	private ProgrammingLanguageRepository languageRepository;
	
	

	public ProgrammingLanguageManager(ProgrammingLanguageRepository languageRepository) {
		
		this.languageRepository = languageRepository;
	}



	@Override
	public List<ProgrammingLanguages> getAll() {
		
		return languageRepository.getAll();
	}



	@Override
	public void add(ProgrammingLanguages programmingLanguage) throws Exception{
		if (programmingLanguage.getName().isEmpty() || programmingLanguage.getName().isBlank()) {
			throw new Exception("Programming language name cannot be empty");
		}
		for (ProgrammingLanguages language : this.languageRepository.getAll()) {
			if (language.getName().equals(programmingLanguage.getName())) {
				throw new Exception("Programming language name cannot be same");
			}
			
		}
		languageRepository.add(programmingLanguage);
			
		}
	

	@Override
	public void delete(int id) {
		languageRepository.delete(id);
		
	}



	@Override
	public void update(ProgrammingLanguages programmingLanguage) {
		// TODO Auto-generated method stub
		
	}



	@Override
	public ProgrammingLanguages getById(int id) {
		
		return languageRepository.getById(id);
	}



	
	

}
