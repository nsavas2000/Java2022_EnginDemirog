package kodlama.io.Devs.business.concretes;

import java.util.ArrayList;
import java.util.List;


import kodlama.io.Devs.business.abstracts.ProgrammingLanguagesTechnologyServise;
import kodlama.io.Devs.business.requests.CreateProgrammingLanguageTechnologyRequest;
import kodlama.io.Devs.business.requests.DeleteProgrammingLanguageTechonologyRequest;
import kodlama.io.Devs.business.requests.UpdateProgrammingLanguageTechonologyRequest;
import kodlama.io.Devs.business.responses.GetAllProgrammingLanguageTechonolgyResponse;
import kodlama.io.Devs.business.responses.GetByIdProgrammingLanguageTechnologyResponse;
import kodlama.io.Devs.dataAccess.abstracts.ProgrammingLanguageRepository;
import kodlama.io.Devs.dataAccess.abstracts.ProgrammingLanguagesTechnologyRepository;
import kodlama.io.Devs.entities.concretes.ProgrammingLanguageTechnology;
import kodlama.io.Devs.entities.concretes.ProgrammingLanguages;


public class ProgrammingLanguageTechonologyManager implements ProgrammingLanguagesTechnologyServise {

	private ProgrammingLanguagesTechnologyRepository programmingLanguagesTechnologyRepository;
	private ProgrammingLanguageRepository programmingLanguageRepository;
	
	
	public ProgrammingLanguageTechonologyManager(
			ProgrammingLanguagesTechnologyRepository programmingLanguagesTechnologyRepository,
			ProgrammingLanguageRepository programmingLanguageRepository) {
		
		this.programmingLanguagesTechnologyRepository = programmingLanguagesTechnologyRepository;
		this.programmingLanguageRepository = programmingLanguageRepository;
	}

	@Override
	public List<GetAllProgrammingLanguageTechonolgyResponse> getAll() {
		List<ProgrammingLanguageTechnology> programmingLanguagesTechnology = programmingLanguagesTechnologyRepository.findAll();
		List<GetAllProgrammingLanguageTechonolgyResponse> getAllProgrammingLanguagesTechonologyResponse = new ArrayList<GetAllProgrammingLanguageTechonolgyResponse>();
		for (ProgrammingLanguageTechnology programmingTechnology : programmingLanguagesTechnology) {
			GetAllProgrammingLanguageTechonolgyResponse responseItem = new GetAllProgrammingLanguageTechonolgyResponse();
			responseItem.setId(programmingTechnology.getId());
			responseItem.setName(programmingTechnology.getName());
			responseItem.setProgrammingLanguage(programmingTechnology.getProgrammingLanguages().getName());
			responseItem.setProgrammingLanguageId(programmingTechnology.getProgrammingLanguages().getId());
		}
		return getAllProgrammingLanguagesTechonologyResponse;
	}


	@Override
	public void add(CreateProgrammingLanguageTechnologyRequest createProgrammingLanguageTechnology) {
		ProgrammingLanguageTechnology programmingLanguageTechnology = new ProgrammingLanguageTechnology();
		ProgrammingLanguages languages = programmingLanguageRepository
				.findById(createProgrammingLanguageTechnology.getProgrammingLanguageId()).get();
		programmingLanguageTechnology.setName(createProgrammingLanguageTechnology.getName());
		programmingLanguageTechnology.setProgrammingLanguages(languages);
		programmingLanguagesTechnologyRepository.save(programmingLanguageTechnology);
		
	}

	@Override
	public void delete(DeleteProgrammingLanguageTechonologyRequest deleteProgrammingLanguageTechnology) {
		programmingLanguagesTechnologyRepository.deleteById(deleteProgrammingLanguageTechnology.getId());
		
	}

	@Override
	public void update(UpdateProgrammingLanguageTechonologyRequest updateProgrammingLanguageTechnology) {
		ProgrammingLanguages programmingLanguages = 
				programmingLanguageRepository.findById(updateProgrammingLanguageTechnology.getProgrammingLanguageId()).get();
		ProgrammingLanguageTechnology techonology = 
				programmingLanguagesTechnologyRepository.findById(updateProgrammingLanguageTechnology.getProgrammingLanguageId()).get();
		techonology.setName(updateProgrammingLanguageTechnology.getName());
		techonology.setProgrammingLanguages(programmingLanguages);
		programmingLanguageRepository.save(techonology);
	}

	@Override
	public GetByIdProgrammingLanguageTechnologyResponse getById(int id) {
		// TODO Auto-generated method stub
		return null;
	}





}
